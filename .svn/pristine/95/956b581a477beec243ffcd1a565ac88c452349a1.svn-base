package cn.digione.yibaic.shop.ui;

import java.util.HashMap;
import java.util.List;

import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import cn.digione.yibaic.shop.R;
import cn.digione.yibaic.shop.ShopApp;
import cn.digione.yibaic.shop.acitvity.AddressManagementActivity;
import cn.digione.yibaic.shop.adapter.AddressListAdapter;
import cn.digione.yibaic.shop.bean.AddressBean;
import cn.digione.yibaic.shop.bean.JsonNoneOutBean;
import cn.digione.yibaic.shop.common.Constants;
import cn.digione.yibaic.shop.http.CustomerJsonHttpResponseHandler;
import cn.digione.yibaic.shop.http.HttpClient;
import cn.digione.yibaic.shop.util.ToastUtil;
import cn.digione.yibaic.shop.util.Utils;

import com.loopj.android.http.RequestParams;

/**
 * 地址列表界面
 * 
 * @author Administrator
 * 
 */
public class AddressListFragment extends BaseFragment {

	private static final String TAG = "AddressListFragment";
	private AddressListAdapter mAdapter;
	private ListView mListView;
	private final String MAX_PAGE_SIZE = "999"; // 表示不分页
	private RelativeLayout addNewAddressLayout;
	private HttpClient client;
	private AlertDialog alertDialog;
	private CustomerJsonHttpResponseHandler<List<AddressBean>> addressHttpResponseHandler;
	private CustomerJsonHttpResponseHandler<JsonNoneOutBean> deleteJsonHttpResponseHandler;
	private CustomerJsonHttpResponseHandler<JsonNoneOutBean> setDefaultJsonHttpResponseHandler;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		Intent intent = getActivity().getIntent();
		final boolean isSelect = intent == null ? false : intent.getBooleanExtra("isSelect", false);
		addressHttpResponseHandler = new CustomerJsonHttpResponseHandler<List<AddressBean>>(getActivity()) {

			@Override
			public void processCallSuccess(List<AddressBean> outBean, String msg) {
				// TODO Auto-generated method stub
				mAdapter = new AddressListAdapter((AddressManagementActivity) getActivity(), outBean, isSelect,
						deleteJsonHttpResponseHandler, setDefaultJsonHttpResponseHandler);
				mListView.setAdapter(mAdapter);
				ShopApp.setListViewHeightBasedOnChildren(mListView);
			}
		};
		deleteJsonHttpResponseHandler = new CustomerJsonHttpResponseHandler<JsonNoneOutBean>(getActivity()) {

			@Override
			public void processCallSuccess(JsonNoneOutBean outBean, String msg) {
				// TODO Auto-generated method stub
				mAdapter.notifyDataSetChanged();
				ShopApp.setListViewHeightBasedOnChildren(mListView);
			}
		};
		setDefaultJsonHttpResponseHandler = new CustomerJsonHttpResponseHandler<JsonNoneOutBean>(getActivity()) {

			@Override
			public void processCallSuccess(JsonNoneOutBean outBean, String msg) {
				// TODO Auto-generated method stub
				getActivity().finish();
			}
		};
	}

	public View onCreateView(LayoutInflater layoutinflater, ViewGroup viewgroup, Bundle bundle) {
		super.onCreateView(layoutinflater, viewgroup, bundle);
		View view;
		view = layoutinflater.inflate(R.layout.address_list_fragment, viewgroup, false);
		addNewAddressLayout = (RelativeLayout) view.findViewById(R.id.add_address_layout);

		addNewAddressLayout.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				((AddressManagementActivity) getActivity()).showFragment("address_add_fragment", null, true);

			}
		});

		mListView = (ListView) view.findViewById(R.id.address_listview);

		if (Utils.Network.isHasNetwork(getActivity())) {
			String url = Constants.NetWorkRequest.QUERY_ADDRESS;
			if (client == null) {
				client = HttpClient.getInstall(getActivity());
			}
			HashMap<String, String> paramMap = new HashMap<String, String>();
			RequestParams params = new RequestParams(paramMap);
			params.put("consigneeAddressVO.currentPage", "1");
			params.put("consigneeAddressVO.pageSize", MAX_PAGE_SIZE); // 表示不分页
			client.postAsync(url, params, addressHttpResponseHandler);
		} else {
			ToastUtil.show(getActivity(), getString(R.string.msg_networkfail), ToastUtil.LENGTH_SHORT);
		}

		return view;

	}
}