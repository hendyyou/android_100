package cn.digione.yibaic.shop.ui;import android.os.Bundle;import android.text.SpannableStringBuilder;import android.text.TextUtils;import android.text.style.TextAppearanceSpan;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.inputmethod.InputMethodManager;import android.widget.EditText;import android.widget.TextView;import cn.digione.yibaic.shop.R;import cn.digione.yibaic.shop.util.Log;import cn.digione.yibaic.shop.widget.BaseAlertDialog;/** * Created with IntelliJ IDEA. * User: youzh * Date: 14-3-4 * Time: 下午5:41 */public class RegisterPasswordFragment extends StepsFragment {    private static final String ACTION_REG_SMS_SENT = "cn.100jia.shop.action.REG_SMS_SENT";    private static final int ERROR_NETWORK = 1;    private static final int ERROR_PHONE_NULL = 4;    private static final int ERROR_SEND_SMS_FAIL = 3;    private static final int ERROR_SERVER = 2;    private static final int ROLL_SMS_SEND_TIMEOUT = 10;    private String mNewAccountType;    private EditText mPasswordConfirmView;    private EditText mPasswordView;    private SpannableStringBuilder getErrorSpanString(int i) {        String s = getActivity().getString(i);        TextAppearanceSpan textspan = new TextAppearanceSpan(getActivity(), R.style.TextAppearance_Notice_Normal);        SpannableStringBuilder spanbuilder = new SpannableStringBuilder(s);        spanbuilder.setSpan(textspan, spanbuilder.length() - s.length(), spanbuilder.length(), 33);        return spanbuilder;    }    public static boolean checkPasswordPattern(String s) {        if (s != null) {            int len = s.length();            if (len < 8 || len > 16) {                return false;            }            int j = 0;            boolean flag = false;            char c1;        }        return true;    }    private String checkAndGetPassword() {        String s = mPasswordView.getText().toString();        String s1 = mPasswordConfirmView.getText().toString();        if (TextUtils.isEmpty(s)) {            mPasswordView.setError(getErrorSpanString(R.string.error_empty_pwd));            mPasswordView.requestFocus();            s = null;        } else {            if (!checkPasswordPattern(s)) {                mPasswordView.setError(getErrorSpanString(R.string.error_illegal_pwd));                mPasswordView.requestFocus();                return null;            }            if (!s.equals(s1)) {                mPasswordConfirmView.setError(getErrorSpanString(R.string.password_error_inconsistent));                mPasswordView.requestFocus();                return null;            }        }        return s;    }    public String getNewAccountType() {        return mNewAccountType;    }    public String getPassword() {        return mPasswordView.getText().toString();    }    protected void onButtonNextClicked() {        final String password = checkAndGetPassword();        if (!TextUtils.isEmpty(password)) {            if ("reg_sms".equals(mNewAccountType)) {                BaseAlertDialog basealertdialog = new BaseAlertDialog(getActivity());                basealertdialog.setMessage(R.string.val_sms_alert);                basealertdialog.setNegativeButton(R.string.btn_negative, null);                basealertdialog.setPositiveButton(R.string.btn_positive, new android.view.View.OnClickListener() {                    public void onClick(View view) {                        RegisterSmsSentFragment registersmssentfragment = new RegisterSmsSentFragment();                        replaceToFragment(registersmssentfragment, true);                        getActivity().setResult(-1);                    }                });                basealertdialog.show();               return;            }            if ("reg_email".equals(mNewAccountType)) {                ((InputMethodManager) getActivity().getSystemService("input_method"))                        .hideSoftInputFromWindow(getView().getWindowToken(), 0);                Bundle bundle = getArguments();                if (bundle != null) {                    final String email = bundle.getString("email");                    RegisterEmailSentFragment registeremailsentfragment = new RegisterEmailSentFragment();                    Bundle bundle1 = new Bundle();                    bundle1.putString("email", email);                    registeremailsentfragment.setArguments(bundle1);                    replaceToFragment(registeremailsentfragment, true);                    getActivity().setResult(-1);                }               return;            }        } else {            Log.w("no argument found");            return;        }    }    public View onCreateView(LayoutInflater layoutinflater, ViewGroup viewgroup, Bundle bundle) {		super.onCreateView(layoutinflater, viewgroup, bundle);        View view = layoutinflater.inflate(R.layout.register_input_password, viewgroup, false);        mPasswordView = (EditText) view.findViewById(R.id.ev_password);        mPasswordConfirmView = (EditText) view.findViewById(R.id.ev_password_confirm);        mPasswordConfirmView.setOnEditorActionListener(new android.widget.TextView.OnEditorActionListener() {            public boolean onEditorAction(TextView textview, int i, KeyEvent keyevent) {                if (i == 5) {                    triggerNextStep();                    return true;                } else {                    return false;                }            }        });        mPasswordView.requestFocus();        mPasswordView.setOnFocusChangeListener(new android.view.View.OnFocusChangeListener() {            public void onFocusChange(View view1, boolean flag) {                if (!flag) {                    String s = mPasswordView.getText().toString();                    if (TextUtils.isEmpty(s)) {                        mPasswordView.setError(getErrorSpanString(R.string.error_empty_pwd));                    } else if (!checkPasswordPattern(s)) {                        mPasswordView.setError(getErrorSpanString(R.string.error_illegal_pwd));                    }                }            }        });        return view;    }    public void onResume() {        super.onResume();        displaySoftInputIfNeed(mPasswordView, true);    }    public void setNewAccountType(String s) {        mNewAccountType = s;    }}