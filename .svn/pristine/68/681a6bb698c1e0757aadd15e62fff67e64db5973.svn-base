package cn.digione.yibaic.shop.ui;

import java.util.HashMap;
import java.util.List;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ListView;
import android.widget.RelativeLayout;
import cn.digione.yibaic.shop.R;
import cn.digione.yibaic.shop.acitvity.AddressManagementActivity;
import cn.digione.yibaic.shop.adapter.AddressListAdapter;
import cn.digione.yibaic.shop.bean.AddressBean;
import cn.digione.yibaic.shop.bean.JsonNoneOutBean;
import cn.digione.yibaic.shop.common.Constants;
import cn.digione.yibaic.shop.http.CustomerJsonHttpResponseHandler;
import cn.digione.yibaic.shop.http.HttpClient;
import cn.digione.yibaic.shop.util.ToastUtil;
import cn.digione.yibaic.shop.util.Utils;

import com.loopj.android.http.RequestParams;

/**
 * 地址列表界面
 * 
 * @author Administrator
 * 
 */
public class AddressListFragment extends BaseFragment {

	private static final String TAG = "AddressListFragment";
	private AddressListAdapter mAdapter;
	private android.widget.AdapterView.OnItemClickListener mItemClickListener;
	private OnItemLongClickListener mItemLongClickListener;
	private ListView mListView;
	private RelativeLayout addNewAddressLayout;
	private HttpClient client;
	private AlertDialog alertDialog;
	private CustomerJsonHttpResponseHandler<List<AddressBean>> addressHttpResponseHandler;
	private CustomerJsonHttpResponseHandler<JsonNoneOutBean> deleteJsonHttpResponseHandler;

	public AddressListFragment() {

		mItemClickListener = new android.widget.AdapterView.OnItemClickListener() {

			public void onItemClick(AdapterView adapterview, View view, int i, long l) {
				Bundle bundle = new Bundle();
				AddressBean adBean = (AddressBean) adapterview.getItemAtPosition(i);
				bundle.putSerializable("modify_address", adBean);
				((AddressManagementActivity) getActivity()).showFragment("address_add_fragment", bundle, true);
			}

		};
		// 长按则提示删除地址
		mItemLongClickListener = new OnItemLongClickListener() {

			@Override
			public boolean onItemLongClick(AdapterView<?> parent, View view, final int position, long id) {
				// TODO Auto-generated method stub
				AlertDialog.Builder builder = new AlertDialog.Builder(view.getContext());
				builder.setTitle(getString(R.string.address_delete_title));
				builder.setMessage(getString(R.string.confirm_address_delect));
				final AddressBean adBean = (AddressBean) parent.getItemAtPosition(position);
				builder.setPositiveButton(getString(R.string.edit_cart_item_button_delete),
						new DialogInterface.OnClickListener() {

							@Override
							public void onClick(DialogInterface mDialogInterface, int which) {
								if (Utils.Network.isHasNetwork(getActivity())) {

									String url = Constants.NetWorkRequest.DELETE_ADDRESS;
									if (client == null) {
										client = HttpClient.getInstall(getActivity());
									}
									HashMap<String, String> paramMap = new HashMap<String, String>();
									RequestParams params = new RequestParams(paramMap);
									params.put("consigneeAddressVO.id", adBean.getId());
									client.postAsync(url, params, deleteJsonHttpResponseHandler);
									mAdapter.deleteItem(position);
								} else {
									ToastUtil.show(getActivity(), getString(R.string.msg_networkfail),
											ToastUtil.LENGTH_SHORT);
								}
							}
						});
				builder.setNegativeButton(getString(R.string.no_string), new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface mDialogInterface, int which) {
						if (alertDialog != null) {
							alertDialog.dismiss();
						}
					}
				});
				alertDialog = builder.create();
				alertDialog.show();
				return false;
			}
		};
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		addressHttpResponseHandler = new CustomerJsonHttpResponseHandler<List<AddressBean>>(getActivity()) {

			@Override
			public void processCallSuccess(List<AddressBean> outBean, String msg) {
				// TODO Auto-generated method stub
				mAdapter = new AddressListAdapter(getActivity(), outBean);
				mListView.setOnItemClickListener(mItemClickListener);
				mListView.setOnItemLongClickListener(mItemLongClickListener);
				mListView.setAdapter(mAdapter);
			}
		};
		deleteJsonHttpResponseHandler = new CustomerJsonHttpResponseHandler<JsonNoneOutBean>(getActivity()) {

			@Override
			public void processCallSuccess(JsonNoneOutBean outBean, String msg) {
				// TODO Auto-generated method stub
				mAdapter.notifyDataSetChanged();
			}
		};
	}

	public View onCreateView(LayoutInflater layoutinflater, ViewGroup viewgroup, Bundle bundle) {
		super.onCreateView(layoutinflater, viewgroup, bundle);
		View view;
		view = layoutinflater.inflate(R.layout.address_list_fragment, viewgroup, false);
		addNewAddressLayout = (RelativeLayout) view.findViewById(R.id.add_address_layout);

		addNewAddressLayout.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				((AddressManagementActivity) getActivity()).showFragment("address_add_fragment", null, true);

			}
		});

		mListView = (ListView) view.findViewById(R.id.address_listview);

		if (Utils.Network.isHasNetwork(getActivity())) {
			String url = Constants.NetWorkRequest.QUERY_ADDRESS;
			if (client == null) {
				client = HttpClient.getInstall(getActivity());
			}
			HashMap<String, String> paramMap = new HashMap<String, String>();
			RequestParams params = new RequestParams(paramMap);
			params.put("consigneeAddressVO.currentPage", "1");
			params.put("consigneeAddressVO.pageSize", "999"); // 表示不分页
			client.postAsync(url, params, addressHttpResponseHandler);
		} else {
			ToastUtil.show(getActivity(), getString(R.string.msg_networkfail), ToastUtil.LENGTH_SHORT);
		}

		return view;

	}
}